1.python内存管理机制(自动化)
	(1)引用计数:
		<1>定义:每个对象存储被变量引用的次数,当引用次数为0时,对象被销毁
		<2>缺点:循环引用
			list01=[]
			list02=[]
			list01.append(list02)
			list02.append(list01)
			del list01,list02
			这样两个列表不能被访问了,可是两个列表还是相互引用了,引用计数均为1,
	(2)标记清除:
		<1>定义:扫描内存,查看是否存在无法访问的内存空间
		<2>优势:解决上面引用计数的问题
		<3>缺点:耗时
	(3)分代回收:
		<1>定义:将内存空间分为多个区域(代),每次在年轻代创建新对象
			当一代空间耗尽时.进行升代操作
		<2>优势:解决上面耗时的问题
		<3>具体操作:
			年轻代==>中年代==>老年代			
			(1)当内存接近没有了的时候,进行扫描,对有用的进行标记
			(2)把他们存到中年代中,进行升代,然后把年轻代的进行清空,从头开始存储数据
	(4)对以上内容的解决:
		<1>减少内存的使用,尽量避免循环使用	
		<2>找到合适的升代时间
			但是python内在的升代机制时间有自身的算法,所以初学者来说没有足够的行业经验,没有必要控制	
		<3>对于创建出来又很快消除掉的对象,可以创造对象池进行缓存
			python自带的不可变对象有池:整数对象池\小数对象池\字符串对象池\bool池
				可变对象:没有池,但是可以根据自身需求
							

